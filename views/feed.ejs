<%- include('./partials/header') %>
  <main>

    <body>

      <div class="container">
        <div class="row">

          <div class="col-lg-3 d-none d-lg-block mt-3 mb-3">
            <a class="nav-link text-dark d-flex align-items-center" href="/perfil">
              <% if (usuario && usuario.foto && usuario.foto.data) { %>
                <img src="data:<%= usuario.foto.contentType %>;base64,<%= usuario.foto.data.toString('base64') %>"
                  class="rounded-circle img-thumbnail me-2" width="90" height="90" alt="Foto de perfil">
              <% } else { %>
                <img src="/images/nopic.png"
                  class="rounded-circle img-thumbnail me-2" width="90" height="90" alt="Foto de perfil padrão">
              <% } %>
              <span class="fw-bold"><%= usuario.nome %></span>
            </a>
          </div>

          <div class="col-lg-6 col-md-12 position-relative">
            <!-- Botão flutuante, modal, e posts -->
            <!-- Botão de Criar Novo Post -->
            <button id="btnFlutuante" class="btn" data-bs-toggle="modal" data-bs-target="#novoPostModal"
              aria-label="Criar Novo Post">
              <img src="../icons/mdi_pencil-plus.svg" alt="Ícone botão criar post" width="24" height="24">
            </button>

            <!-- Modal de Novo Post -->
            <div class="modal fade" id="novoPostModal" tabindex="-1" aria-labelledby="novoPostModalLabel"
              aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <form id="formNovoPost">
                    <div class="modal-header">
                      <h5 class="modal-title" id="novoPostModalLabel">Novo Post</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                    </div>
                    <div class="modal-body">
                      <div class="mb-3">
                        <label for="textoPost" class="form-label">Texto</label>
                        <textarea class="form-control" id="textoPost" rows="3" required></textarea>
                      </div>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                      <button type="submit" class="btn btn-primary">Publicar</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>
            <!-- Lista de posts -->
            <div class="posts-container">
              <% posts.forEach(post=> {
                const curtiu = usuario && post.likes && post.likes.some(id => id.toString() === usuario._id.toString());
                const salvou = usuario && post.salvosPor && post.salvosPor.some(id => id.toString() ===
                usuario._id.toString());
                %>
                <div class="card mb-3 border rounded-0 min-h-125" data-post-id="<%= post._id %>">
                  <div class="card-body d-flex">
                      <a href="/usuarios/<%= post.author._id %>">
                        <% if (post.author.foto && post.author.foto.data) { %>
                          <img src="data:<%= post.author.foto.contentType %>;base64,<%= post.author.foto.data.toString('base64') %>" 
                               class="rounded-circle me-2" 
                               alt="Foto do autor" 
                               style="width: 40px; height: 40px; object-fit: cover;">
                        <% } else { %>
                          <img src="/images/nopic.png" 
                               class="rounded-circle me-2" 
                               alt="Foto do autor" 
                               style="width: 40px; height: 40px; object-fit: cover;">
                        <% } %>
                      </a>
                          <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-start">
                              <div>
                                <h6 class="mb-0 fw-bold">
                                  <% if (post.author) { %>
                                    <%= post.author.nome %>
                                      <span class="badge
                        <% if (post.author.curso === 'Informática') { %> bg-warning text-dark <% } 
                          else if (post.author.curso === 'Eletrotécnica') { %> bg-primary text-white <% } 
                          else if (post.author.curso === 'Edificações') { %> bg-danger text-white <% } 
                          else if (post.author.curso === 'Química') { %> bg-dark text-white <% } 
                          else if (post.author.curso === 'Mecânica') { %> bg-success text-white <% } 
                          else if (post.author.curso === 'Telecomunicações') { %> bg-info text-white <% } 
                          else { %> bg-secondary text-white <% } %> ms-2">
                                        <%= post.author.curso %>
                                      </span>
                                      <% } else { %>
                                        <em>Autor desconhecido</em>
                                        <% } %>
                                </h6>
                              </div>
                              <div>
                                <button class="btn-icon" aria-label="Mais opções do post"><i
                                    class="bi bi-three-dots"></i></button>
                              </div>
                            </div>
                            <p class="conteudo" style="text-align: left;">
                              <%= post.message %>
                            </p>
                            
                            <!-- Área de comentários (inicialmente oculta) -->
                            <div class="comentarios mt-3" style="display:none;">
                              <div class="lista-comentarios mb-2">
                                <% if (post.comentarios && post.comentarios.length> 0) { %>
                                  <% post.comentarios.forEach(comentario=> { %>
                                    <div class="comentario border rounded p-2 mb-1">
                                      <small>
                                        <strong>
                                          <%= comentario.autor && comentario.autor.nome ? comentario.autor.nome
                                            : 'Anônimo' %>:
                                        </strong>
                                        <%= comentario.texto %>
                                      </small>
                                    </div>
                                    <% }) %>
                                      <% } else { %>
                                        <p class="text-muted">Nenhum comentário ainda.</p>
                                        <% } %>
                              </div>
                              <form class="form-comentario">
                                <div class="input-group">
                                  <input type="text" class="form-control input-comentario"
                                    placeholder="Escreva um comentário..." required>
                                  <button class="btn btn-primary btn-submit-comentario" type="submit">Enviar</button>
                                </div>
                              </form>
                            </div>

                          </div>
                  </div>
                </div>
                <% }) %>

            </div>
          </div>

          <div class="col-lg-3 d-none d-lg-block">
            <!-- Notícias (com a classe SLN aplicada) -->
            <div class="portal-eventos p-3 bg-light rounded shadow-sm">
              <h5 class="fw-bold mb-3">Próximos Eventos</h5>
              <ul class="list-unstyled">
                <% eventos.forEach(evento => { %>
                  <li class="mb-2 border-start border-primary ps-2">
                    <div class="fw-semibold"><%= evento.titulo %></div>
                    <div class="text-muted" style="font-size: 0.9rem;">
                      <i class="bi bi-calendar-event me-1"></i>
                      <%= new Date(evento.data).toLocaleDateString('pt-BR') %>
                    </div>
                  </li>
                <% }) %>
              </ul>
              <div class="mt-3">
                <a href="/eventos" class="btn btn-outline-primary btn-sm w-100">
                  Ver todos os eventos
                </a>
              </div>
            </div>
            
          </div>

        </div>
      </div>
    </body>
  </main>

  <footer>
    <%- include('./partials/footer') %>
  </footer>

  <style>
  .portal-eventos ul li:hover {
  background-color: #f1f1f1;
  }

    .SLN {
      width: 100%;
      height: 100%;
      padding-left: 16px;
      padding-right: 16px;
      padding-top: 5px;
      padding-bottom: 5px;
      overflow: hidden;
      border-radius: 5px;
      outline: 0.60px rgba(0, 0, 0, 0.60) solid;
      outline-offset: -0.60px;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      gap: 9px;
      display: inline-flex
    }

    .icones {
      display: flex;
      justify-content: start;
      align-items: center;
      margin-top: 2%;
      gap: 35%;
      padding-left: 50px;
    }

    .btn-icon {
      background: none;
      border: none;
      padding: 0.25rem;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      gap: 4px;
    }

    .btn-icon:hover {
      opacity: 0.7;
    }

    .btn-icon i {
      font-size: 1.2rem;
      color: inherit;
    }

    #btnFlutuante {
      position: fixed;
      bottom: 20px;
      right: 20px;
      /* fixou o botão no canto inferior direito */
      z-index: 1050;
      width: 50px;
      height: 50px;
      border: none;
      border-radius: 15px;
      background-color: #B9E185;
      color: #000;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }

    .comentarios {
      border-top: 1px solid #ccc;
      padding-top: 0.5rem;
    }
  </style>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO" crossorigin="anonymous">
    </script>

  <script>
    console.log('Script carregado e rodando no feed');

    document.getElementById('formNovoPost').addEventListener('submit', async function (e) {
      e.preventDefault();
      const texto = document.getElementById('textoPost').value;

      try {
        const response = await fetch('/posts/criar', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ message: texto })
        });

        const result = await response.json();
        if (result.success) {
          location.reload();
        } else {
          alert('Erro ao criar post.');
        }
      } catch (err) {
        console.error(err);
        alert('Erro de conexão com o servidor.');
      }
    });

    document.addEventListener('DOMContentLoaded', () => {
      const usuarioLogado = JSON.parse('<%= JSON.stringify(usuario || null) %>');

      document.querySelectorAll('.btn-like').forEach(btn => {
        btn.addEventListener('click', async () => {
          if (!usuarioLogado) {
            alert('Faça login para curtir posts.');
            return;
          }
          const card = btn.closest('.card');
          const postId = card.dataset.postId;
          try {
            const res = await fetch(`/posts/${postId}/like`, { method: 'POST' });
            const data = await res.json();
            if (data.success) {
              const icon = btn.querySelector('i');
              const countSpan = btn.querySelector('.like-count');
              if (icon.classList.contains('bi-heart')) {
                icon.classList.remove('bi-heart');
                icon.classList.add('bi-heart-fill', 'text-danger');
              } else {
                icon.classList.add('bi-heart');
                icon.classList.remove('bi-heart-fill', 'text-danger');
              }
              countSpan.textContent = data.likesCount;
            } else {
              alert('Erro ao curtir post');
            }
          } catch (err) {
            console.error(err);
            alert('Erro na conexão');
          }
        });
      });

      document.querySelectorAll('.btn-comment').forEach(btn => {
        btn.addEventListener('click', () => {
          const card = btn.closest('.card');
          const comentariosArea = card.querySelector('.comentarios');
          if (comentariosArea.style.display === 'none' || !comentariosArea.style.display) {
            comentariosArea.style.display = 'block';
          } else {
            comentariosArea.style.display = 'none';
          }
        });
      });

      document.querySelectorAll('.form-comentario').forEach(form => {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          if (!usuarioLogado) {
            alert('Faça login para comentar.');
            return;
          }
          const card = form.closest('.card');
          const postId = card.dataset.postId;
          const input = form.querySelector('.input-comentario');
          const texto = input.value.trim();
          if (!texto) return;

          try {
            const res = await fetch(`/posts/${postId}/comentar`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ texto })
            });
            const data = await res.json();
            if (data.success) {
              const listaComentarios = card.querySelector('.lista-comentarios');
              listaComentarios.innerHTML = '';
              data.comentarios.forEach(comentario => {
                const div = document.createElement('div');
                div.classList.add('comentario', 'border', 'rounded', 'p-2', 'mb-1');
                div.innerHTML = `<small><strong>${comentario.autor && comentario.autor.nome ? comentario.autor.nome : 'Anônimo'}:</strong> ${comentario.texto}</small>`;
                listaComentarios.appendChild(div);
              });
              input.value = '';
            } else {
              alert('Erro ao enviar comentário.');
            }
          } catch (err) {
            console.error(err);
            alert('Erro na conexão');
          }
        });
      });

      document.querySelectorAll('.btn-save').forEach(btn => {
        btn.addEventListener('click', async () => {
          if (!usuarioLogado) {
            alert('Faça login para salvar posts.');
            return;
          }
          const card = btn.closest('.card');
          const postId = card.dataset.postId;
          try {
            const res = await fetch(`/posts/${postId}/salvar`, { method: 'POST' });
            const data = await res.json();
            if (data.success) {
              const icon = btn.querySelector('i');
              if (icon.classList.contains('bi-bookmark')) {
                icon.classList.remove('bi-bookmark');
                icon.classList.add('bi-bookmark-fill', 'text-primary');
              } else {
                icon.classList.add('bi-bookmark');
                icon.classList.remove('bi-bookmark-fill', 'text-primary');
              }
            } else {
              alert('Erro ao salvar post');
            }
          } catch (err) {
            console.error(err);
            alert('Erro na conexão');
          }
        });
      });

    });
  </script>

  </body>

  </html>
